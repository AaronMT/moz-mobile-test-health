name: "Daily UI Test (Intermittent/Failure) Report"

on:
  schedule:
    # Run every day 5:00 AM UTC
    - cron: 0 5 * * *
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.11.0]
        configuration: [mozilla-central, mozilla-beta, autoland, mozilla-release, reference-browser]
    steps:
      - uses: actions/checkout@v4.1.4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Set current date as env variable
        id: date
        run: |
          echo "date=$(date +'%Y_%m_%d_%I_%M_%p')" >> $GITHUB_OUTPUT
          echo "day=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      - name: Run script
        id: runClient
        run: |
          python client.py --project=${{ matrix.configuration }}
          [ ! -e output.log ] || cat output.log
          [ ! -e output.json ] || cp output.json $JSON_FILE
          [ ! -e output.json ] || python post.py --input=output.json
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          JSON_FILE: ${{ steps.date.outputs.date }}_${{ matrix.configuration }}.json
      - uses: actions/upload-artifact@v4.6.0
        name: Upload Artifact (json)
        if: hashFiles('output.json') != ''
        with:
          name: JSON (${{ steps.date.outputs.date }}_${{ matrix.configuration }}.json) [zip]
          path: ${{ steps.date.outputs.date }}_${{ matrix.configuration }}.json
      - name: Generate HTML Report
        if: hashFiles('output.json') != ''
        run: |
          python report.py
          [ ! -e report.html ] || cp report.html $HTML_FILE
        continue-on-error: true
        env:
          HTML_FILE: ${{ steps.date.outputs.date }}_${{ matrix.configuration }}.html
      - uses: google-github-actions/auth@v2.1.7
        name: Authenticate Google Cloud
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - uses: google-github-actions/upload-cloud-storage@v2.2.2
        if: hashFiles('output.json') != ''
        name: Upload Artifact (json) to Google Cloud Storage
        with: 
          path: ${{ steps.date.outputs.date }}_${{ matrix.configuration }}.json
          destination: mobile-reports/public/moz-mobile-test-health/${{ steps.date.outputs.day }}
          process_gcloudignore: false
      - uses: google-github-actions/upload-cloud-storage@v2.2.2
        if: hashFiles('report.html') != ''
        name: Upload Artifact (html) to Google Cloud Storage
        with:
          path: ${{ steps.date.outputs.date }}_${{ matrix.configuration }}.html
          destination: mobile-reports/public/moz-mobile-test-health/${{ steps.date.outputs.day }}
          process_gcloudignore: false
      - name: Post generated HTML URL to Slack
        id: runSlackHTML
        if: hashFiles('report.html') != ''
        run: | 
          python post-html-report.py --url=https://storage.googleapis.com/mobile-reports/public/moz-mobile-test-health/${{ steps.date.outputs.day }}/${{ steps.date.outputs.date }}_${{ matrix.configuration }}.html
        continue-on-error: true
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      - name: Show public URL
        if: hashFiles('output.json') != '' || hashFiles('report.html') != ''
        run: |
          echo "Public JSON URL: https://storage.googleapis.com/mobile-reports/public/moz-mobile-test-health/${{ steps.date.outputs.day }}/${{ steps.date.outputs.date }}_${{ matrix.configuration }}.json"
          echo "Public Report HTML URL: https://storage.googleapis.com/mobile-reports/public/moz-mobile-test-health/${{ steps.date.outputs.day }}/${{ steps.date.outputs.date }}_${{ matrix.configuration }}.html"
